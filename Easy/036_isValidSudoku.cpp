#include<iostream>
#include<vector>
using namespace std;
class Solution
{
public:
	bool isValidSudoku(vector<vector<char>>& board)
	{
		int a[3][9][9] = { 0 };
		for (int i = 0; i < 9; i++)
			for (int j = 0; j < 9; j++)
			{
				if (board[i][j] != '.')
				{
					if (a[0][i][(board[i][j] - '1')]++)
						return false;
					if (a[1][j][(board[i][j] - '1')]++)
						return false;
					if (a[2][(i / 3 * 3 + j / 3)][(board[i][j] - '1')]++)
						return false;
				}
			}
		return true;
	}
} s;

int main()
{
	vector<vector<char>> v1 =
	{ {'5', '3', '.', '.', '7', '.', '.', '.', '.'},
	  {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
	  {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
	  {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
	  {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
	  {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
	  {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
	  {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
	  {'.', '.', '.', '.', '8', '.', '.', '7', '9'} };
	vector<vector<char>> v2 =
	{ {'8', '3', '.', '.', '7', '.', '.', '.', '.'},
	  {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
	  {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
	  {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
	  {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
	  {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
	  {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
	  {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
	  {'.', '.', '.', '.', '8', '.', '.', '7', '9'} };
	cout << s.isValidSudoku(v1) << endl;
	cout << s.isValidSudoku(v2) << endl;
	system("pause");
	return 0;
}